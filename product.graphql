schema {
  query: ProductEndpoint
}

type AudioTrack {
  language: String!
}

interface CreativeWork {
  sid: String
  name: String
  duration: Int
  originalName: String
  type: String
  tmdbId: String
  tmdbUrl: String
  imdbId: String
  imdbUrl: String
  genres: [Genre]
  rating: Rating
  image(variation: ImageVariationInput): String
  backdrop(variation: ImageVariationInput): String
  overview: String
  voteAverage: Float
  ageRecommendation: Int
  releaseYear: Int
  isSuitableForLittleKids: Boolean
  isSuitableForBigKids: Boolean
  isSuitableForTweens: Boolean
}

type Genre {
  slug: String
  value: String
  label: String
}

input ImageVariationInput {
  w: Int
  h: Int
  dpr: Int
  bg: String
  fm: String
  auto: String
  minH: Int
  minW: Int
  fit: String
  fill: String
  fillColor: String
  trim: String
  trimColor: String
  q: Int
  blur: Int
  crop: String
}

type Medium {
  sid: String!
  product: Product
  number: Int
  volumeName: String
  support: SupportType
  zone: Zone
  size: String
  titles: [Title]
}

type Movie implements CreativeWork {
  sid: String
  name: String
  duration: Int
  originalName: String
  type: String
  tmdbId: String
  tmdbUrl: String
  imdbId: String
  imdbUrl: String
  genres: [Genre]
  rating: Rating
  image(variation: ImageVariationInput): String
  backdrop(variation: ImageVariationInput): String
  overview: String
  voteAverage: Float
  ageRecommendation: Int
  releaseYear: Int
  isSuitableForLittleKids: Boolean
  isSuitableForBigKids: Boolean
  isSuitableForTweens: Boolean
  releaseDate: String
  length: Int
  lengthFmt: String
}

type Packaging {
  slug: String
  value: String
  label: String
}

type Product {
  metadata: ProductMetadata
  sid: String!
  gtin: String!
  ean: String!
  name: String!
  releaseDate: String
  image(variation: ImageVariationInput): String
  backCover(variation: ImageVariationInput): String
  asin: String
  publisher: String
  description: String
  packaging: Packaging
  discs: Int
  mediaCount: Int
  media: [Medium]
  titlesCount: Int
  titles: [Title]
  children: [Product]
  childrenCount: Int
}

type ProductEndpoint {
  lookup(query: ProductLookupQuery!): [Product]
  product(query: ProductGetQuery!): Product
}

input ProductGetQuery {
  sid: String
}

input ProductLookupQuery {
  type: String
  value: String!
}

type ProductMetadata {
  createdAt: String
  updatedAt: String
  completionRate: Float!
  completionRatePercent: Int
}

type Rating {
  slug: String
  value: String
  label: String
  score: Int
}

type SubtitleTrack {
  language: String!
}

type SupportType {
  value: String
  label: String
}

type Title {
  sid: String!
  name: String
  duration: Int
  size: String
  creativeWork: CreativeWork
  videoTracks: [VideoTrack]
  audioTracks: [AudioTrack]
  subtitleTracks: [SubtitleTrack]
}

type TvShow implements CreativeWork {
  sid: String
  name: String
  duration: Int
  originalName: String
  type: String
  tmdbId: String
  tmdbUrl: String
  imdbId: String
  imdbUrl: String
  genres: [Genre]
  rating: Rating
  image(variation: ImageVariationInput): String
  backdrop(variation: ImageVariationInput): String
  overview: String
  voteAverage: Float
  ageRecommendation: Int
  releaseYear: Int
  isSuitableForLittleKids: Boolean
  isSuitableForBigKids: Boolean
  isSuitableForTweens: Boolean
  seasons: [TvShowSeason]
}

type TvShowEpisode implements CreativeWork {
  sid: String
  name: String
  duration: Int
  originalName: String
  type: String
  tmdbId: String
  tmdbUrl: String
  imdbId: String
  imdbUrl: String
  genres: [Genre]
  rating: Rating
  image(variation: ImageVariationInput): String
  backdrop(variation: ImageVariationInput): String
  overview: String
  voteAverage: Float
  ageRecommendation: Int
  releaseYear: Int
  isSuitableForLittleKids: Boolean
  isSuitableForBigKids: Boolean
  isSuitableForTweens: Boolean
  fullName: String!
  season: Int!
  number: Int!
  show: TvShow!
  length: Int
  lengthFmt: String
}

type TvShowSeason {
  name: String!
  number: Int!
  episodes: Int
  tmdbId: String
  overview: String
}

type VideoTrack {
  resolution: String
  aspectRatio: String
}

type Zone {
  value: String
  label: String
}
