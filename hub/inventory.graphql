schema {
  query: InventoryEndpoint
}

type AspectRatio {
  value: Float
}

type AudioTrack implements Track {
  sid: String
  hash: String
  index: Int
  name: String
  codec: String
  default: Boolean
  enabled: Boolean
  type: String
  title: Title
  language: Language
  bitRate: BitRate
  channels: Int
  channelLayout: ChannelLayout
  audioDescription: Boolean
  audioCommentary: Boolean
}

type BitRate {
  value: Int
}

type ChannelLayout {
  value: String
  label: String
}

interface CreativeWork {
  sid: String
  name: String
  duration: Int
  originalName: String
  type: String
  tmdbId: String
  tmdbUrl: String
  imdbId: String
  imdbUrl: String
  genres: [Genre]
  rating: Rating
  image(variation: ImageVariationInput): String
  backdrop(variation: ImageVariationInput): String
  overview: String
  voteAverage: Float
  ageRecommendation: Int
  releaseYear: Int
  isSuitableForLittleKids: Boolean
  isSuitableForBigKids: Boolean
  isSuitableForTweens: Boolean
}

type FrameRate {
  value: Int
}

type Genre {
  slug: String
  value: String
  label: String
}

input ImageVariationInput {
  w: Int
  h: Int
  dpr: Int
  bg: String
  fm: String
  auto: String
  minH: Int
  minW: Int
  maxH: Int
  maxW: Int
  fit: String
  fill: String
  fillColor: String
  trim: String
  trimColor: String
  q: Int
  blur: Int
  crop: String
  ar: String
}

type InventoryEndpoint {
  inventory(query: InventoryGetQuery!): [Item]
  inventoryCount(query: InventoryGetQuery!): Int!
  item(query: ItemGetQuery!): Item
}

input InventoryGetQuery {
  owner: String
  offset: Int
  limit: Int
}

type Item {
  sid: String!
  dateAdded: String
  product: Product!
  sku: String!
  label: String!
  barcode(h: Int): SvgImage!
  shareCapital: Int
  userShares(user: String!): Int
  children: [Item]
  childrenCount: Int
  price: Money
}

input ItemGetQuery {
  sid: String
}

type Language {
  code: String
  name: String
}

type Medium {
  sid: String!
  product: Product
  number: Int
  volumeName: String
  support: SupportType
  zones: [Zone]
  size: String
  titles: [MediumTitle]
}

type MediumTitle {
  medium: Medium
  title: Title
  order: Int
  activated: Boolean
}

type Money {
  amount: Int!
  currency: String!
}

type Movie implements CreativeWork {
  sid: String
  name: String
  duration: Int
  originalName: String
  type: String
  tmdbId: String
  tmdbUrl: String
  imdbId: String
  imdbUrl: String
  genres: [Genre]
  rating: Rating
  image(variation: ImageVariationInput): String
  backdrop(variation: ImageVariationInput): String
  overview: String
  voteAverage: Float
  ageRecommendation: Int
  releaseYear: Int
  isSuitableForLittleKids: Boolean
  isSuitableForBigKids: Boolean
  isSuitableForTweens: Boolean
  releaseDate: String
  length: Int
  lengthFmt: String
  poster(variation: ImageVariationInput): String
}

type Packaging {
  slug: String
  value: String
  label: String
}

type Product {
  metadata: ProductMetadata
  sid: String!
  locked: Boolean
  gtin: String!
  ean: String!
  name: String!
  releaseDate: String
  image(variation: ImageVariationInput): String
  label: String!
  barcode(h: Int): SvgImage!
  backCover(variation: ImageVariationInput): String
  asin: String
  publisher: String
  description: String
  bonuses: String
  packaging: Packaging
  discs: Int
  mediaCount: Int
  media: [Medium]
  titlesCount: Int
  titles: [Title]
  children: [Product]
  childrenCount: Int
}

type ProductMetadata {
  createdAt: String
  updatedAt: String
  completionRate: Float!
  completionRatePercent: Int
}

input QueryPaginationInput {
  offset: Int
  limit: Int
}

type Rating {
  slug: String
  value: String
  label: String
  score: Int
}

type SubtitleTrack implements Track {
  sid: String
  hash: String
  index: Int
  name: String
  codec: String
  default: Boolean
  enabled: Boolean
  type: String
  title: Title
  language: Language
  forced: Boolean
  closedCaptions: Boolean
}

type SupportType {
  value: String
  label: String
}

type SvgImage {
  rawContent: String!
  dataImage: String!
}

type Title {
  sid: String!
  name: String
  duration: Int
  size: String
  playlist: String
  source: String
  creativeWork: CreativeWork
  tracks: [Track]
  videoTracks: [VideoTrack]
  audioTracks: [AudioTrack]
  subtitleTracks: [SubtitleTrack]
}

interface Track {
  sid: String
  hash: String
  index: Int
  name: String
  codec: String
  default: Boolean
  enabled: Boolean
  type: String
  title: Title
}

type TvShow implements CreativeWork {
  sid: String
  name: String
  duration: Int
  originalName: String
  type: String
  tmdbId: String
  tmdbUrl: String
  imdbId: String
  imdbUrl: String
  genres: [Genre]
  rating: Rating
  image(variation: ImageVariationInput): String
  backdrop(variation: ImageVariationInput): String
  overview: String
  voteAverage: Float
  ageRecommendation: Int
  releaseYear: Int
  isSuitableForLittleKids: Boolean
  isSuitableForBigKids: Boolean
  isSuitableForTweens: Boolean
  seasons: [TvShowSeason]
  poster(variation: ImageVariationInput): String
}

type TvShowEpisode implements CreativeWork {
  sid: String
  name: String
  duration: Int
  originalName: String
  type: String
  tmdbId: String
  tmdbUrl: String
  imdbId: String
  imdbUrl: String
  genres: [Genre]
  rating: Rating
  image(variation: ImageVariationInput): String
  backdrop(variation: ImageVariationInput): String
  overview: String
  voteAverage: Float
  ageRecommendation: Int
  releaseYear: Int
  isSuitableForLittleKids: Boolean
  isSuitableForBigKids: Boolean
  isSuitableForTweens: Boolean
  season: TvShowSeason!
  show: TvShow!
  fullName: String!
  shortName: String!
  number: Int!
  length: Int
  lengthFmt: String
}

type TvShowSeason {
  sid: String
  show: TvShow!
  name: String!
  number: Int!
  tmdbId: String
  overview: String
  episodes(pagination: QueryPaginationInput): [TvShowEpisode]
}

type VideoTrack implements Track {
  sid: String
  hash: String
  index: Int
  name: String
  codec: String
  default: Boolean
  enabled: Boolean
  type: String
  title: Title
  frameRate: FrameRate
  width: Int
  height: Int
  resolution: String
  aspectRatio: AspectRatio
}

type Zone {
  value: String
  label: String
}
